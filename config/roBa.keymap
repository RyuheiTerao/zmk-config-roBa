#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R                        &kp T                                             &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D         &kp F                        &kp G        &kp LS(LG(S))         &kp MINUS      &kp H        &kp J  &kp K      &kp L    &kp SEMICOLON
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                        &kp B        &lt 1 MINUS           &lt 1 MINUS    &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 4 LANGUAGE_2  &lt 3 SPACE  &lt 2 LANGUAGE_1      &kp BACKSPACE  &lt 5 ENTER                             &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        Num {
            bindings = <
&kp NUMBER_1    &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                              &kp NUMBER_6  &kp N7  &kp N8  &kp N9  &kp N0
&kp NUMBER_1    &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5  &trans      &none           &kp NUMBER_6  &kp N7  &kp N8  &kp N9  &kp N0
&kp LEFT_SHIFT  &trans        &trans        &trans        &trans  &trans      &trans          &none         &trans  &trans  &trans  &none
&trans          &trans        &trans        &trans        &trans  &trans      &kp LEFT_SHIFT  &kp LSHIFT                            &none
            >;
        };

        Symbol {
            bindings = <
&kp ESC               &kp INT_YEN           &kp TILDE             &kp LEFT_BRACE        &kp RIGHT_BRACE                                               &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp MINUS
&kp LS(RS(NUMBER_1))  &kp LS(RS(NUMBER_2))  &kp LS(RS(NUMBER_3))  &kp LS(RS(NUMBER_4))  &kp LS(RS(N5))   &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp LS(RS(NUMBER_6))  &kp RS(LS(N7))         &kp RS(LS(N8))        &kp RS(LS(N9))     &kp LS(N0)
&kp LEFT_SHIFT        &none                 &none                 &none                 &none            &kp EQUAL                    &trans          &kp PLUS              &kp MINUS              &kp LS(RS(ASTERISK))  &kp SLASH          &kp INT3
&trans                &trans                &trans                &trans                &trans           &trans                       &trans          &trans                                                                                &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE            &kp LC(W)     &kp LC(E)     &kp LC(R)     &kp LC(T)                                   &trans         &trans                  &kp UP_ARROW    &trans                   &kp TAB
&kp LC(A)             &kp LC(S)     &none         &kp LC(F)     &kp LC(G)  &trans            &trans         &kp HOME       &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END
&mt LC(LEFT_SHIFT) Z  &kp LC(X)     &kp LC(C)     &kp LC(V)     &kp LC(B)  &kp LEFT_ALT      &trans         &trans         &kp LC(LS(LEFT_ARROW))  &trans          &kp LC(LS(RIGHT_ARROW))  &trans
&kp LEFT_CONTROL      &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_ALT  &kp TAB    &trans            &kp BACKSPACE  &kp LA(ENTER)                                                                   &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_DOWN) LC(PAGE_UP)>;
        };

        MOUSE {
            bindings = <
&trans  &trans          &msc SCRL_UP    &trans           &trans                      &trans    &mkp MB4  &none     &mkp MB5  &trans
&trans  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &trans  &trans      &trans  &mkp MB1  &mkp MB1  &mkp MB3  &mkp MB2  &mkp MB2
&trans  &trans          &msc SCRL_DOWN  &trans           &trans  &trans      &trans  &trans    &trans    &trans    &trans    &trans
&trans  &trans          &trans          &trans           &trans  &trans      &trans  &trans                                  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        SCROLL {
            bindings = <
&kp F1          &kp F2   &kp F3  &kp F4  &kp F5                         &msc SCRL_LEFT  &mkp MB1  &msc SCRL_UP    &msc SCRL_UP    &msc SCRL_RIGHT
&kp F6          &kp F7   &kp F8  &kp F9  &kp F10  &trans      &trans    &trans          &mkp MB1  &msc SCRL_DOWN  &msc SCRL_DOWN  &mkp MB2
&kp F11         &kp F12  &trans  &trans  &trans   &trans      &trans    &trans          &trans    &mkp MB3        &trans          &trans
&lt 6 NUMBER_6  &trans   &trans  &tog 0  &tog 0   &tog 0      &mkp MB4  &mkp MB5                                                  &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &sys_reset   &trans        &trans        &tog 5        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &bt BT_PRV   &bt BT_NXT                                              &bt BT_CLR_ALL
            >;
        };
    };
};
